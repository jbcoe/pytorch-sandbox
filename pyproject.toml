[project]
name = "pytorch_sandbox"
description = "A place to play with pytorch."
version = "0.0.1"
requires-python = ">=3.10"
dependencies = [
    "numpy>=2.2.4",
    "torch>=2.6.0",
    "torchdata>=0.11.0",
    "torchvision>=0.21.0",
    "tyro==0.3.25",
]

[project.scripts]
mnist-demo = "pytorch_sandbox.mnist_demo:main"
mnist-train = "pytorch_sandbox.mnist_train:main"

[project.urls]
"GitHub" = "https://github.com/jbcoe/pytorch-sandbox"

[tool.ruff]
line-length = 120
indent-width = 4

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = [
    "B", # Bugbear
    # "C901", # complex-structure. # TODO: Enable this check.
    "D", # Docstrings
    "E", # Pycodestyle
    "F", # Pyflakes
    "I", # Isort
    "ICN003", # banned-import-from
    "W", # Pycodestyle
]
ignore = [
    "D107", # Missing docstring in `__init__`.
    "D104", # Missing docstring in public package.
    "D401", # First line of docstring should be in imperative mood.
    "D415", # First line should end with a period, question mark, or exclamation point.
    "D400", # First line should end with a period.
    "D105", # Missing docstring in magic method.
    "D203", # `no-blank-line-before-class`.
    "D212", # `multi-line-summary-second-line`.
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.flake8-import-conventions]
banned-from = ["*"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "E402", # import violations
]

[tool.ruff.format]
quote-style = "double"

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true

[tool.coverage.run]
concurrency = ["thread", "multiprocessing"]
source = ["."]

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"
